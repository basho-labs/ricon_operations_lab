Generating the Basho/CentOS-6.7 Box
---

Start with the [Bento/CentOS-6.7](https://atlas.hashicorp.com/bento/boxes/centos-6.7) Box.


#### Generally useful packages

```
sudo yum --nogpgcheck -y install vim emacs git perl
```


#### Demo app

We're using Ruby for the demo application, so we need to navigate some dependency... "fun".

We'll be using `rvm` to install Ruby 1.9.3, which comes with Gem and Bundler, which will let us install a number of Ruby dependencies required for the demo.

```
sudo yum --nogpgcheck -y groupinstall development

gpg2 --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
curl -L get.rvm.io | bash -s stable

source ~/.profile
rvm install 1.9.3

echo "source 'https://rubygems.org'
gem 'json', '~> 1.7.7'
gem 'sinatra'
gem 'geohash', :git => 'git://github.com/sideshowcoder/geohash.git'
gem 'riak-client', :git => 'git://github.com/basho/riak-ruby-client.git', :branch => 'broker-inverted-index'
gem 'rack'
gem 'unicorn'
gem 'riak_crdts', :git => 'git://github.com/dankerrigan/riak_crdts.git'
gem 'newrelic_rpm'" > Gemfile

bundle install
rm Gemfile Gemfile.lock

echo "source 'https://rubygems.org'
gem 'riak-client'" > Gemfile

bundle install
rm Gemfile Gemfile.lock
```

With Ruby and the correct Gem set installed, want want to expose those binaries to the root user in case we need to run an application in elevated privileges. Which is a pretty hacky thing to do, admittedly. And we're going to get it done with an equally hacky trick.

Please never do this on a real-world system.

We need to enter a root session in order to modify the correct files. Enter said session wtih,

```
su -
```

```
echo '' >> /root/.bash_profile
echo '[[ -s "/home/vagrant/.rvm/scripts/rvm" ]] && source "/home/vagrant/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*' >> /root/.bash_profile

echo '' >> /root/.bashrc
echo 'export PATH="$PATH:/home/vagrant/.rvm/bin" # Add RVM to PATH for scripting' >> /root/.bashrc
```

Press `ctrl+d` to exit the `su -` session.


#### Zabbix Client

We're going to be using Zabbix, and its MySQL backend, for our monitoring solution. Luckily, for us, they have a yum repo already set up.

```
sudo rpm -ivh http://repo.zabbix.com/zabbix/2.4/rhel/6/x86_64/zabbix-release-2.4-1.el6.noarch.rpm
sudo yum --nogpgcheck -y install zabbix-agent zabbix-server-mysql zabbix-web-mysql mysql mysql-server
```
